name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
      - feature/*
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Run Lint
        run: yarn lint

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Get Git Short Hash
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t my-docker-repo/myapp:${{ env.GIT_SHA }} .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push my-docker-repo/myapp:${{ env.GIT_SHA }}
